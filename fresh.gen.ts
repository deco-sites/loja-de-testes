// DO NOT EDIT. This file is generated by deco.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `dev.ts`.

import config from "./deno.json" assert { type: "json" };
import { DecoManifest } from "$live/types.ts";
import * as $0 from "./routes/[...catchall].tsx";
import * as $1 from "./routes/_app.tsx";
import * as $2 from "./routes/_middleware.ts";
import * as $3 from "./routes/index.tsx";
import * as $4 from "./routes/orders/[id]/confirmation-success.tsx";
import * as $5 from "./routes/orders/[id]/confirmation.tsx";
import * as $6 from "./routes/orders/[id]/delivery-info.tsx";
import * as $7 from "./routes/orders/[id]/index.tsx";
import * as $8 from "./routes/orders/index.tsx";
import * as $$0 from "./islands/AddToCart.tsx";
import * as $$1 from "./islands/CartButton.tsx";
import * as $$2 from "./islands/CartModal.tsx";
import * as $$3 from "./islands/Header.tsx";
import * as $$4 from "./islands/LiveControls.tsx";
import * as $$$0 from "./sections/Head.tsx";
import * as $$$1 from "./sections/Header.tsx";
import * as $$$2 from "./sections/ProductList.tsx";
import * as $$$$0 from "./functions/loadProducts.ts";

const manifest: DecoManifest = {
  routes: {
    "./routes/[...catchall].tsx": $0,
    "./routes/_app.tsx": $1,
    "./routes/_middleware.ts": $2,
    "./routes/index.tsx": $3,
    "./routes/orders/[id]/confirmation-success.tsx": $4,
    "./routes/orders/[id]/confirmation.tsx": $5,
    "./routes/orders/[id]/delivery-info.tsx": $6,
    "./routes/orders/[id]/index.tsx": $7,
    "./routes/orders/index.tsx": $8,
  },
  islands: {
    "./islands/AddToCart.tsx": $$0,
    "./islands/CartButton.tsx": $$1,
    "./islands/CartModal.tsx": $$2,
    "./islands/Header.tsx": $$3,
    "./islands/LiveControls.tsx": $$4,
  },
  sections: {
    "./sections/Head.tsx": $$$0,
    "./sections/Header.tsx": $$$1,
    "./sections/ProductList.tsx": $$$2,
  },
  functions: { "./functions/loadProducts.ts": $$$$0 },
  schemas: {
    "./sections/Head.tsx": {
      "inputSchema": {
        "title": " Head",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
          },
          "description": {
            "type": "string",
            "title": "Description",
          },
          "url": {
            "type": "string",
            "title": "Url",
          },
          "imageUrl": {
            "type": "string",
            "title": "Image Url",
          },
          "faviconUrl": {
            "type": "string",
            "title": "Favicon Url",
          },
          "styleUrls": {
            "type": "array",
            "items": {
              "type": "string",
            },
            "title": "Style Urls",
          },
          "themeColor": {
            "type": "string",
            "title": "Theme Color",
          },
        },
        "required": [
          "title",
          "description",
          "url",
          "imageUrl",
          "faviconUrl",
          "styleUrls",
          "themeColor",
        ],
      },
      "outputSchema": null,
    },
    "./sections/Header.tsx": {
      "inputSchema": null,
      "outputSchema": null,
    },
    "./sections/ProductList.tsx": {
      "inputSchema": {
        "title": " Product List",
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
          },
          "products": {
            "$id": "43f72da89de4abd29798cff8c0d99fafda6ce155",
            "format": "live-function",
            "type": "string",
            "title": "Products",
          },
        },
        "required": [
          "title",
          "products",
        ],
      },
      "outputSchema": null,
    },
    "./functions/loadProducts.ts": {
      "inputSchema": {
        "title": "Load Products",
        "type": "object",
        "properties": {
          "count": {
            "type": [
              "number",
              "null",
            ],
            "title": "Count",
          },
        },
        "required": [],
      },
      "outputSchema": {
        "type": "object",
        "properties": {
          "data": {
            "$id": "2a74bc5a512c10d33225d6243b7b82dd992aaeb6",
          },
        },
        "additionalProperties": true,
      },
    },
  },
  baseUrl: import.meta.url,
  config,
};

// live â€” this exposes the manifest so the live server can render components dynamically
globalThis.manifest = manifest;

export default manifest;
